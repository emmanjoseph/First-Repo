import { useEffect, useLayoutEffect, useState } from 'react';
export var useResize = function (_a) {
    var ref = _a.ref, setSelected = _a.setSelected, cardWidth = _a.cardWidth, refCard = _a.refCard, isRegularCardsShown = _a.isRegularCardsShown;
    var _b = useState(0), width = _b[0], setWidth = _b[1];
    var _c = useState(cardWidth), widthCard = _c[0], setWidthCard = _c[1];
    useEffect(function () {
        if (width) {
            var selected = Math.ceil(width / cardWidth);
            var selectedCount = isRegularCardsShown ? 1 : 2;
            setSelected(selected > 1 ? selected : selectedCount);
        }
    }, [width, cardWidth, setSelected, isRegularCardsShown]);
    useLayoutEffect(function () {
        var updateSize = function () {
            if (ref && ref.current) {
                setWidth(ref.current.offsetWidth);
            }
            if (refCard && refCard.current) {
                setWidthCard(refCard.current.offsetWidth);
            }
        };
        window.addEventListener('resize', updateSize);
        updateSize();
        return function () { return window.removeEventListener('resize', updateSize); };
    }, []);
    return { width: width, setWidth: setWidth, widthCard: widthCard };
};
//# sourceMappingURL=useResize.js.map